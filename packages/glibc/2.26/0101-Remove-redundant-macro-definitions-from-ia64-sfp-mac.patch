From 9ba55c94b255d162cbc7346bc243b09e4dd94d07 Mon Sep 17 00:00:00 2001
From: Joseph Myers <joseph@codesourcery.com>
Date: Mon, 12 Nov 2018 14:37:45 +0000
Subject: [PATCH 101/102] Remove redundant macro definitions from ia64
 sfp-machine.h.

After the changes to use the copy attribute, building glibc for ia64
fails, even with older compilers, because
sysdeps/ia64/fpu/sfp-machine.h has a definition of _strong_alias that
now differs from the one in libc-symbols.h.

That definition is a relic of this file coming from libgcc, as are
some other such macro definitions in this file; in the glibc context,
there is no need for those macros, and this patch removes them to fix
the build.

Tested with build-many-glibcs.py for ia64-linux-gnu.

	* sysdeps/ia64/fpu/sfp-machine.h (__LITTLE_ENDIAN): Remove.
	(__BIG_ENDIAN): Likewise.
	(__BYTE_ORDER): Likewise.
	(strong_alias): Likewise.
	(_strong_alias): Likewise.
---
 ChangeLog                      |  8 ++++++++
 sysdeps/ia64/fpu/sfp-machine.h | 10 ----------
 2 files changed, 8 insertions(+), 10 deletions(-)

diff --git a/ChangeLog b/ChangeLog
index f7911376ef..8d434380e1 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,3 +1,11 @@
+2018-11-12  Joseph Myers  <joseph@codesourcery.com>
+
+       * sysdeps/ia64/fpu/sfp-machine.h (__LITTLE_ENDIAN): Remove.
+       (__BIG_ENDIAN): Likewise.
+       (__BYTE_ORDER): Likewise.
+       (strong_alias): Likewise.
+       (_strong_alias): Likewise.
+
 2018-11-09  Martin Sebor  <msebor@redhat.com>
 
        * include/libc-symbols.h (__attribute_copy__): Define macro unless
diff --git a/sysdeps/ia64/fpu/sfp-machine.h b/sysdeps/ia64/fpu/sfp-machine.h
index 45e844d3da..ec79e67b3b 100644
--- a/sysdeps/ia64/fpu/sfp-machine.h
+++ b/sysdeps/ia64/fpu/sfp-machine.h
@@ -88,13 +88,3 @@ void __sfp_handle_exceptions (int);
   } while (0)
 
 #define FP_ROUNDMODE		(_fcw & FP_RND_MASK)
-
-#define	__LITTLE_ENDIAN	1234
-#define	__BIG_ENDIAN	4321
-
-#define __BYTE_ORDER __LITTLE_ENDIAN
-
-/* Define ALIASNAME as a strong alias for NAME.  */
-#define strong_alias(name, aliasname) _strong_alias(name, aliasname)
-#define _strong_alias(name, aliasname) \
-  extern __typeof (name) aliasname __attribute__ ((alias (#name)));
-- 
2.30.0

